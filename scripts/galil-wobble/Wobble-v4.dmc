#wobbleA
' Define variables for positions and dwell times
'pos_B0 = 1000  
'pos_C0 = 1000 
'dwel0 = 1000  
'
'pos_B1 = 200  
'pos_C1 = 100  
'dwel1 = 1000  
'
'pos_B2 = 300  
'pos_C2 = 150  
'dwel2 = 1000  
'
'pos_B3 = 400  
'pos_C3 = 200  
'dwel3 = 1000  

' Set the number of positions
' num_pos = 4  

' Enable motors B and C
SH BC  

' Set acceleration and deceleration
AC ,500000, 500000  
DC ,500000, 500000  

' Set speed for B and C
SP ,900000, 900000  

k = 0  

#loop
    ' Reset timer before motion starts
    t0 = TIME   
		MG t0
    ' Retrieve positions based on step counter


    IF (k = 0)
        posB = pos_B0
        posC = pos_C0
        dwel = dwel0
    ENDIF

 		IF (k = 1)
        posB = pos_B1
        posC = pos_C1
        dwel = dwel1
		ENDIF

    IF (k = 2)
        posB = pos_B2
        posC = pos_C2
        dwel = dwel2
		ENDIF

    IF (k = 3)
        posB = pos_B3
        posC = pos_C3
        dwel = dwel3
    ENDIF

    ' Command motors to absolute positions
 		MG "k:", k, " posB:", posB, " posC:", posC, " dwel:", dwel
    PA 0,posB,posC,0  
    BG BC  

    ' Wait for motion completion
    AM BC  

    ' Measure move time
    elaps = TIME - t0

    ' Calculate remaining time for dwell
    rem = dwel - elaps

		MG "time", TIME, " dwell: ", dwel, ", elapsed: ", elaps," remaining: ", rem

    ' Ensure remaining time is not negative (avoid negative wait times)
    IF (rem < 0)  
        rem = 0  
		ENDIF

    ' Wait for the remaining dwell time
    WT rem  

    ' Increment counter and reset if needed
    k = k + 1  
    IF (k >= num_pos)  
        k = 0  
		ENDIF

    ' Loop forever
    JP #loop  

' Disable motors when stopping (optional safety)
MO BC  

EN  