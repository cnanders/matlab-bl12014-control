classdef HeightSensorLEDs < mic.Base
    
    properties

        % {mic.ui.device.GetSetNumber 1x1}}
        ui1
        ui2
        ui3
        ui4
        ui5
        ui6
        
        uiPositionRecaller

        
    end
    
    properties (SetAccess = private)
        
        dWidth = 900
        dHeight = 220
        
        cName = 'height-sensor-leds-'
        
        lShowStores = false
        lShowZero = false
        lShowRel = false
        
    end
    
    properties (Access = private)
        
        clock
        
        hPanel
        hParent
        
        dWidthName = 70
        dWidthUnit = 80
        dWidthVal = 75
        dWidthPadUnit = 25 % 280
        
        % {bl12014.Hardware 1x1}
        hardware

        
    end
    
    methods
        
        function this = HeightSensorLEDs(varargin)
            
            for k = 1 : 2: length(varargin)
                this.msg(sprintf('passed in %s', varargin{k}), this.u8_MSG_TYPE_VARARGIN_PROPERTY);
                if this.hasProp( varargin{k})
                    this.msg(sprintf(' settting %s', varargin{k}), this.u8_MSG_TYPE_VARARGIN_SET);
                    this.(varargin{k}) = varargin{k + 1};
                end
            end
            
            
%             if ~isa(this.clock, 'mic.Clock')
%                 error('clock must be mic.Clock');
%             end
            
            if ~isa(this.clock, 'mic.Clock') && ~isa(this.clock, 'mic.ui.Clock')
                error('clock must be mic.Clock | mic.ui.Clock');
            end
            %{
            if ~isa(this.uiClock, 'mic.Clock') && ~isa(this.uiClock, 'mic.ui.Clock')
                error('uiClock must be mic.Clock | mic.ui.Clock');
            end
            %}
            
            if ~isa(this.hardware, 'bl12014.Hardware')
                error('hardware must be bl12014.Hardware');
            end
            
            this.init();
        
        end
        
        function syncDestinations(this)
            
            this.ui1.syncDestination();
            this.ui2.syncDestination();
            this.ui3.syncDestination();
            this.ui4.syncDestination();
            this.ui5.syncDestination();
             this.ui6.syncDestination();
             
        end
       
        %{
        function connectMightex2(this, comm)
            
            device = bl12014.device.GetSetNumberFromMightexUniversalLedController(comm, 1);
            this.ui1.setDevice(device);
            this.ui1.turnOn();
            
            
            device = bl12014.device.GetSetNumberFromMightexUniversalLedController(comm,2);
            this.ui2.setDevice(device);
            this.ui2.turnOn();
            
            
            device = bl12014.device.GetSetNumberFromMightexUniversalLedController(comm,3);
            this.ui3.setDevice(device);
            this.ui3.turnOn();
            
            
            device = bl12014.device.GetSetNumberFromMightexUniversalLedController(comm,4);
            this.ui4.setDevice(device);
            this.ui4.turnOn();
            
            
        end
        
        function connectMightex1(this, comm)
            
            device = bl12014.device.GetSetNumberFromMightexUniversalLedController(comm,1);
            this.ui5.setDevice(device);
            this.ui5.turnOn();
            
            
            device = bl12014.device.GetSetNumberFromMightexUniversalLedController(comm,2);
            this.ui6.setDevice(device);
            this.ui6.turnOn();
           
        end
        %}
        
         

        function build(this, hParent, dLeft, dTop)
                        
            this.hPanel = uipanel(...
                'Parent', hParent,...
                'Units', 'pixels',...
                'Title', 'Height Sensor LEDs',...
                'Clipping', 'on',...
                'Position', mic.Utils.lt2lb([ ...
                dLeft ...
                dTop ...
                this.dWidth ...
                this.dHeight], hParent) ...
            );
        
            dTop = 20;
            dLeft = 10;
            dSep = 24;
            
            
            this.ui1.build(this.hPanel, dLeft, dTop);
            dTop = dTop + 15 + dSep;
            
            this.ui2.build(this.hPanel, dLeft, dTop);
            dTop = dTop + dSep;
            
            this.ui3.build(this.hPanel, dLeft, dTop);
            dTop = dTop + dSep;
            
            this.ui4.build(this.hPanel, dLeft, dTop);
            dTop = dTop + dSep;
            
            this.ui5.build(this.hPanel, dLeft, dTop);
            dTop = dTop + dSep;
            
            this.ui6.build(this.hPanel, dLeft, dTop);
            dTop = dTop + dSep;
            
            dLeft = 500; 
            
            this.uiPositionRecaller.build(this.hPanel, dLeft, 40, 380, 170);
            
            
            
        end
        
        
        
        function cec = getPropsDelete(this)
            cec = {...
                'ui1', ...
                'ui2', ... references FluxDensity
                'ui3', ...
                'ui4', ...
                'ui5', ...
                'ui6', ...
            };
        end
                    
        function delete(this)
            this.msg('delete()', this.u8_MSG_TYPE_CLASS_INIT_DELETE);  
            cecProps = this.getPropsDelete();
            for n = 1 : length(cecProps)
                cProp = cecProps{n};
                cMsg = sprintf('delete() deleting %s', cProp);
                this.msg(cMsg, this.u8_MSG_TYPE_CLASS_INIT_DELETE); 
                this.(cProp).delete();
            end
        end  
        
        
    end
    
    methods (Access = private)
                
         
        
        
        function initUi1(this)
            
            cPathConfig = fullfile(...
                bl12014.Utils.pathUiConfig(), ...
                'get-set-number', ...
                'config-height-sensor-led.json' ...
            );
        
            uiConfig = mic.config.GetSetNumber(...
                'cPath',  cPathConfig ...
            );
            
            u8Channel = 1;
            this.ui1 = mic.ui.device.GetSetNumber(...
                'clock', this.clock, ...
                'dWidthName', this.dWidthName, ...
                'dWidthUnit', this.dWidthUnit, ...
                'dWidthVal', this.dWidthVal, ...
                'dWidthPadUnit', this.dWidthPadUnit, ...
                'cName', [this.cName, '1'], ...
                'config', uiConfig, ...
                'lShowStores', this.lShowStores, ...
                'lShowZero', this.lShowZero, ...
                'lShowRel', this.lShowRel, ...
                'fhGet', @() this.hardware.getMightex2().getCurrentNormalModeCached(u8Channel), ...
                'fhSet', @(dVal) this.hardware.getMightex2().setNormalModeCurrent(u8Channel, dVal), ...
                'fhIsReady', @() true, ...
                'fhStop', @() [], ...
                'fhIsVirtual', @() false, ...
                'lUseFunctionCallbacks', true, ...
                'cLabel', 'z 5:30 (1)' ...
            );
        end
        
        function initUi2(this)
            
            cPathConfig = fullfile(...
                bl12014.Utils.pathUiConfig(), ...
                'get-set-number', ...
                'config-height-sensor-led.json' ...
            );
        
            uiConfig = mic.config.GetSetNumber(...
                'cPath',  cPathConfig ...
            );
            
        u8Channel = 2;
            this.ui2 = mic.ui.device.GetSetNumber(...
                'clock', this.clock, ...
                'dWidthName', this.dWidthName, ...
                'dWidthUnit', this.dWidthUnit, ...
                'dWidthVal', this.dWidthVal, ...
                'dWidthPadUnit', this.dWidthPadUnit, ...
                'cName', [this.cName, '2'], ...
                'lShowLabels', false, ...
                'config', uiConfig, ...
                'lShowStores', this.lShowStores, ...
                'lShowZero', this.lShowZero, ...
                'lShowRel', this.lShowRel, ...
                'fhGet', @() this.hardware.getMightex2().getCurrentNormalModeCached(u8Channel), ...
                'fhSet', @(dVal) this.hardware.getMightex2().setNormalModeCurrent(u8Channel, dVal), ...
                'fhIsReady', @() true, ...
                'fhStop', @() [], ...
                'fhIsVirtual', @() false, ...
                'lUseFunctionCallbacks', true, ...
                'cLabel', 'z 9:30 (2)' ...
            );
        end
        
        function initUi3(this)
            
            cPathConfig = fullfile(...
                bl12014.Utils.pathUiConfig(), ...
                'get-set-number', ...
                'config-height-sensor-led.json' ...
            );
        
            uiConfig = mic.config.GetSetNumber(...
                'cPath',  cPathConfig ...
            );
            
        u8Channel = 3;
            this.ui3 = mic.ui.device.GetSetNumber(...
                'clock', this.clock, ...
                'dWidthName', this.dWidthName, ...
                'dWidthUnit', this.dWidthUnit, ...
                'dWidthVal', this.dWidthVal, ...
                'dWidthPadUnit', this.dWidthPadUnit, ...
                'cName', [this.cName, '3'], ...
                'lShowLabels', false, ...
                'config', uiConfig, ...
                'lShowStores', this.lShowStores, ...
                'lShowZero', this.lShowZero, ...
                'lShowRel', this.lShowRel, ...
                'fhGet', @() this.hardware.getMightex2().getCurrentNormalModeCached(u8Channel), ...
                'fhSet', @(dVal) this.hardware.getMightex2().setNormalModeCurrent(u8Channel, dVal), ...
                'fhIsReady', @() true, ...
                'fhStop', @() [], ...
                'fhIsVirtual', @() false, ...
                'lUseFunctionCallbacks', true, ...
                'cLabel', 'z 1:30 (3)' ...
            );
        end
        
        function initUi4(this)
            
            cPathConfig = fullfile(...
                bl12014.Utils.pathUiConfig(), ...
                'get-set-number', ...
                'config-height-sensor-led.json' ...
            );
        
            uiConfig = mic.config.GetSetNumber(...
                'cPath',  cPathConfig ...
            );
            
            u8Channel = 4;
            this.ui4 = mic.ui.device.GetSetNumber(...
                'clock', this.clock, ...
                'dWidthName', this.dWidthName, ...
                'dWidthUnit', this.dWidthUnit, ...
                'dWidthVal', this.dWidthVal, ...
                'dWidthPadUnit', this.dWidthPadUnit, ...
                'cName', [this.cName, '4'], ...
                'lShowLabels', false, ...
                'config', uiConfig, ...
                'lShowStores', this.lShowStores, ...
                'lShowZero', this.lShowZero, ...
                'lShowRel', this.lShowRel, ...
                'fhGet', @() this.hardware.getMightex2().getCurrentNormalModeCached(u8Channel), ...
                'fhSet', @(dVal) this.hardware.getMightex2().setNormalModeCurrent(u8Channel, dVal), ...
                'fhIsReady', @() true, ...
                'fhStop', @() [], ...
                'fhIsVirtual', @() false, ...
                'lUseFunctionCallbacks', true, ...
                'cLabel', 'ang 0:30 (4)' ...
            );
        end
        
        function initUi5(this)
            
            cPathConfig = fullfile(...
                bl12014.Utils.pathUiConfig(), ...
                'get-set-number', ...
                'config-height-sensor-led.json' ...
            );
        
            uiConfig = mic.config.GetSetNumber(...
                'cPath',  cPathConfig ...
            );
            
            u8Channel = 1;
            this.ui5 = mic.ui.device.GetSetNumber(...
                'clock', this.clock, ...
                'dWidthName', this.dWidthName, ...
                'dWidthUnit', this.dWidthUnit, ...
                'dWidthVal', this.dWidthVal, ...
                'dWidthPadUnit', this.dWidthPadUnit, ...
                'cName', [this.cName, '5'], ...
                'lShowLabels', false, ...
                'config', uiConfig, ...
                'lShowStores', this.lShowStores, ...
                'lShowZero', this.lShowZero, ...
                'lShowRel', this.lShowRel, ...
                'fhGet', @() this.hardware.getMightex1().getCurrentNormalModeCached(u8Channel), ...
                'fhSet', @(dVal) this.hardware.getMightex1().setNormalModeCurrent(u8Channel, dVal), ...
                'fhIsReady', @() true, ...
                'fhStop', @() [], ...
                'fhIsVirtual', @() false, ...
                'lUseFunctionCallbacks', true, ...
                'cLabel', 'ang 4:30 (5)' ...
            );
        end
        
        function initUi6(this)
            
            cPathConfig = fullfile(...
                bl12014.Utils.pathUiConfig(), ...
                'get-set-number', ...
                'config-height-sensor-led.json' ...
            );
        
            uiConfig = mic.config.GetSetNumber(...
                'cPath',  cPathConfig ...
            );
            
            u8Channel = 2;
            this.ui6 = mic.ui.device.GetSetNumber(...
                'clock', this.clock, ...
                'dWidthName', this.dWidthName, ...
                'dWidthUnit', this.dWidthUnit, ...
                'dWidthVal', this.dWidthVal, ...
                'dWidthPadUnit', this.dWidthPadUnit, ...
                'cName', [this.cName, '6'], ...
                'lShowLabels', false, ...
                'config', uiConfig, ...
                'lShowStores', this.lShowStores, ...
                'lShowZero', this.lShowZero, ...
                'lShowRel', this.lShowRel, ...
                'fhGet', @() this.hardware.getMightex1().getCurrentNormalModeCached(u8Channel), ...
                'fhSet', @(dVal) this.hardware.getMightex1().setNormalModeCurrent(u8Channel, dVal), ...
                'fhIsReady', @() true, ...
                'fhStop', @() [], ...
                'fhIsVirtual', @() false, ...
                'lUseFunctionCallbacks', true, ...
                'cLabel', 'ang 8:30 (6)' ...
            );
        end

        
        function initUiPositionRecaller(this)
            
            cDirThis = fileparts(mfilename('fullpath'));
            cPath = fullfile(cDirThis, '..', '..', 'save', 'position-recaller');
            this.uiPositionRecaller = mic.ui.common.PositionRecaller(...
                'cConfigPath', cPath, ... 
                'cName', [this.cName, '-position-recaller'], ...
                'lShowLabelOfList', false, ... 
                'cTitleOfPanel', 'Saved Configurations', ...
                'hGetCallback', @this.getValues, ...
                'hSetCallback', @this.setValues ...
            );
        end
        
 
        function init(this)
            this.msg('init()');
            this.initUi1();
            this.initUi2();
            this.initUi3();
            this.initUi4();
            this.initUi5();
            this.initUi6();
            this.initUiPositionRecaller();
            
            this.syncDestinations();
            
            
        end
        
         % Return list of values from your app
        function dValues = getValues(this)
            dValues = [...
                this.ui1.getValRaw(), ...
                this.ui2.getValRaw(), ...
                this.ui3.getValRaw(), ...
                this.ui4.getValRaw(), ...
                this.ui5.getValRaw(), ...
                this.ui6.getValRaw() ...
            ];
        end
        
        % Set recalled values into your app
        function setValues(this, dValues)
            
            this.ui1.setDestRaw(dValues(1));
            this.ui2.setDestRaw(dValues(2));
            this.ui3.setDestRaw(dValues(3));
            this.ui4.setDestRaw(dValues(4));
            this.ui5.setDestRaw(dValues(5));
            this.ui6.setDestRaw(dValues(6));
            
            this.ui1.moveToDest();
            this.ui2.moveToDest();
            this.ui3.moveToDest();
            this.ui4.moveToDest();
            this.ui5.moveToDest();
            this.ui6.moveToDest();
            
        end
        
        
        
    end
    
    
end

